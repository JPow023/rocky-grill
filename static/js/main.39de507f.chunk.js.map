{"version":3,"sources":["Images/rocky-grill-logo.jpg","Images/image-one.jpg","Images/image-two.jpg","Images/image-three.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","id","src","require","class","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sJAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4HCkDzBC,MA/Cf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,YACNJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,YACNJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,UAAUC,IAAKC,EAAQ,MAC/BN,EAAAC,EAAAC,cAAA,OAAKE,GAAG,eAGVJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,WAAR,gCACAJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,SACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,gBAAR,kBAEFJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,aACNJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,uBACNJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,OAAKK,MAAM,cAAcF,IAAKC,EAAQ,OAC7DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,OAAKK,MAAM,cAAcF,IAAKC,EAAQ,OAC7DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,OAAKK,MAAM,cAAcF,IAAKC,EAAQ,UAInEN,EAAAC,EAAAC,cAAA,OAAKE,GAAG,sBACNJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,kBAAR,YACAJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,wBAAR,20CAMFJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,mBACFJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAcH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,eAAR,SAAiCJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,oBAAR,4EAC9DJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAcH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,eAAR,cAAiCJ,EAAAC,EAAAC,cAAA,WAAjC,gBAAoDF,EAAAC,EAAAC,cAAA,WAApD,eAAsEF,EAAAC,EAAAC,cAAA,WAAtE,aAAsFF,EAAAC,EAAAC,cAAA,WAAtF,sBC9BzBM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOd,EAAAC,EAAAC,cAACa,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.39de507f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rocky-grill-logo.b9024a10.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-one.6f550afc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-two.7f78ee3b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-three.2f93d36c.jpg\";","import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <div id=\"side-bar\">\n          <div id=\"logo-div\">\n            <img id=\"rg-logo\" src={require('./Images/rocky-grill-logo.jpg')} />\n            <div id=\"rocky-div\">\n            </div>\n          </div>\n          <br />\n          <div id=\"address\">1501 Main Street Brockway PA</div>\n          <br />\n          <div className=\"menu-option\">About Us</div>\n          <div className=\"menu-option\">Menu</div>\n          <div className=\"menu-option\">Hours</div>\n          <br />\n          <div id=\"phone-number\">(814)268-4595</div>\n        </div>\n        <div id=\"main-body\">\n          <div id=\"main-body-container\">\n            <div className=\"row\">\n              <div className=\"col-4\"><img class=\"food-images\" src={require('./Images/image-one.jpg')} /></div>\n              <div className=\"col-4\"><img class=\"food-images\" src={require('./Images/image-two.jpg')} /></div>\n              <div className=\"col-4\"><img class=\"food-images\" src={require('./Images/image-three.jpg')} /></div>\n            </div>\n          </div>\n        </div>\n        <div id=\"about-us-container\">\n          <div id=\"about-us-title\">About Us</div>\n          <div id=\"about-us-description\">\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sit amet ex semper, varius quam non, feugiat elit. Curabitur varius libero ex, non condimentum elit imperdiet at. Pellentesque porttitor consectetur rhoncus. Nam et placerat dolor. Praesent vehicula accumsan justo ac porta. Fusce fermentum massa vehicula arcu dapibus, ac laoreet erat volutpat. Pellentesque feugiat vitae nisl ut mollis. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec eu dui ac odio semper varius. Etiam hendrerit quis sem et mollis.\n\nDonec volutpat enim at massa lobortis mattis. Mauris malesuada orci quis iaculis finibus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Suspendisse potenti. Nullam at laoreet sem. Vivamus massa odio, sodales vel tempor quis, molestie nec mi. Maecenas feugiat ullamcorper urna, vel hendrerit erat lacinia eu. In hac habitasse platea dictumst. Nunc eu leo ut lorem tincidunt feugiat quis eu ipsum. Integer feugiat leo maximus, iaculis velit volutpat, tincidunt erat. Suspendisse ac velit consectetur, fringilla mi ut, auctor turpis. Quisque id quam id magna efficitur scelerisque vitae ac ante. Vivamus sapien dui, blandit at varius et, iaculis eget dui. Proin tincidunt lectus vitae sapien facilisis, in consequat enim efficitur. Nulla eu euismod purus, in suscipit felis.</div>\n        </div>\n        <div id=\"hours-container\">\n              <div className=\"row\">\n                <div className=\"col-6 hours\"><div id=\"hours-title\">Hours</div><div id=\"hours-disclaimer\">*Hours subject to change. Please call ahead and schedule a reservation.</div></div>\n                <div className=\"col-6 hours\"><div id=\"hours-hours\">Tuesday 9-6<br />Wednesday 9-6<br />Thursday 9-6<br />Friday 9-6<br />Saturday 9-6</div></div>\n              </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}